name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build affected applications
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        run: pnpm turbo build --filter="...[HEAD^1]"

      - name: Setup Firebase CLI
        if: github.ref == 'refs/heads/main'
        run: npm install -g firebase-tools

      - name: Deploy to Firebase
        if: github.ref == 'refs/heads/main'
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          # Debug: Check if token exists
          if [ -z "$FIREBASE_TOKEN" ]; then
            echo "‚ùå FIREBASE_TOKEN is empty or not set"
            echo "Please check your GitHub repository secrets"
            exit 1
          fi
          
          echo "‚úÖ FIREBASE_TOKEN is set"
          
          # Check for changes in shared packages folder
          PACKAGES_CHANGED=$(git diff --name-only HEAD^1 HEAD | grep "^packages/" || true)
          WEBSITE_CHANGED=$(git diff --name-only HEAD^1 HEAD | grep "^apps/website/" || true)
          ECOMMERCE_CHANGED=$(git diff --name-only HEAD^1 HEAD | grep "^apps/ecommerce/" || true)
          EDITORIAL_CHANGED=$(git diff --name-only HEAD^1 HEAD | grep "^apps/editorial/" || true)
          
          # If packages folder changed, deploy all apps (since they all depend on shared code)
          if [ -n "$PACKAGES_CHANGED" ]; then
            echo "üì¶ Shared packages changed - deploying all applications..."
            echo "Changed files in packages: $PACKAGES_CHANGED"
            
            echo "üöÄ Deploying website (shared dependency)..."
            firebase deploy --only hosting:website --token "$FIREBASE_TOKEN"
            
            echo "üöÄ Deploying ecommerce (shared dependency)..."
            firebase deploy --only hosting:ecommerce --token "$FIREBASE_TOKEN"
            
            echo "üöÄ Deploying editorial (shared dependency)..."
            firebase deploy --only hosting:editorial --token "$FIREBASE_TOKEN"
            
          else
            echo "üì± No shared package changes - checking individual apps..."
            
            # Deploy individual apps only if their specific folders changed
            if [ -n "$WEBSITE_CHANGED" ]; then
              echo "üöÄ Deploying website (app-specific changes)..."
              firebase deploy --only hosting:website --token "$FIREBASE_TOKEN"
            fi
            
            if [ -n "$ECOMMERCE_CHANGED" ]; then
              echo "üöÄ Deploying ecommerce (app-specific changes)..."
              firebase deploy --only hosting:ecommerce --token "$FIREBASE_TOKEN"
            fi
            
            if [ -n "$EDITORIAL_CHANGED" ]; then
              echo "üöÄ Deploying editorial (app-specific changes)..."
              firebase deploy --only hosting:editorial --token "$FIREBASE_TOKEN"
            fi
          fi
          
          # Summary
          if [ -z "$PACKAGES_CHANGED" ] && [ -z "$WEBSITE_CHANGED" ] && [ -z "$ECOMMERCE_CHANGED" ] && [ -z "$EDITORIAL_CHANGED" ]; then
            echo "‚ÑπÔ∏è  No changes detected in apps or packages folders - no deployment needed"
          fi 